// Created by Microsoft (R) C/C++ Compiler Version 12.00.8168.0 (cedcfbd1).
//
// mlapp.tli
//
// Wrapper implementations for Win32 type library c:\matlabr12\bin\win32\mlapp.tlb
// compiler-generated file created 10/01/03 at 17:46:46 - DO NOT EDIT!

#pragma once

//
// interface IMLApp wrapper method implementations
//

inline HRESULT IMLApp::GetFullMatrix ( _bstr_t Name, _bstr_t Workspace, SAFEARRAY * * pr, SAFEARRAY * * pi ) {
    HRESULT _hr = raw_GetFullMatrix(Name, Workspace, pr, pi);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

inline HRESULT IMLApp::PutFullMatrix ( _bstr_t Name, _bstr_t Workspace, SAFEARRAY * pr, SAFEARRAY * pi ) {
    HRESULT _hr = raw_PutFullMatrix(Name, Workspace, pr, pi);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

inline HRESULT IMLApp::MinimizeCommandWindow ( ) {
    HRESULT _hr = raw_MinimizeCommandWindow();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

inline HRESULT IMLApp::MaximizeCommandWindow ( ) {
    HRESULT _hr = raw_MaximizeCommandWindow();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

inline _bstr_t IMLApp::GetCharArray ( _bstr_t Name, _bstr_t Workspace ) {
    BSTR _result;
    HRESULT _hr = raw_GetCharArray(Name, Workspace, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

inline HRESULT IMLApp::PutCharArray ( _bstr_t Name, _bstr_t Workspace, _bstr_t charArray ) {
    HRESULT _hr = raw_PutCharArray(Name, Workspace, charArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

inline long IMLApp::GetVisible ( ) {
    long _result;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

inline void IMLApp::PutVisible ( long pVal ) {
    HRESULT _hr = put_Visible(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// dispinterface DIMLApp wrapper method implementations
//

inline HRESULT DIMLApp::GetFullMatrix ( _bstr_t Name, _bstr_t Workspace, SAFEARRAY * * pr, SAFEARRAY * * pi ) {
    return _com_dispatch_method(this, 0x60010000, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x6005\x6005", (BSTR)Name, (BSTR)Workspace, pr, pi);
}

inline HRESULT DIMLApp::PutFullMatrix ( _bstr_t Name, _bstr_t Workspace, SAFEARRAY * pr, SAFEARRAY * pi ) {
    return _com_dispatch_method(this, 0x60010001, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x2005\x2005", (BSTR)Name, (BSTR)Workspace, pr, pi);
}

inline _bstr_t DIMLApp::Execute ( _bstr_t Name ) {
    BSTR _result;
    _com_dispatch_method(this, 0x60010002, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _bstr_t(_result, false);
}

inline HRESULT DIMLApp::MinimizeCommandWindow ( ) {
    return _com_dispatch_method(this, 0x60010003, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

inline HRESULT DIMLApp::MaximizeCommandWindow ( ) {
    return _com_dispatch_method(this, 0x60010004, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

inline HRESULT DIMLApp::Quit ( ) {
    return _com_dispatch_method(this, 0x60010005, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

inline _bstr_t DIMLApp::GetCharArray ( _bstr_t Name, _bstr_t Workspace ) {
    BSTR _result;
    _com_dispatch_method(this, 0x60010006, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)Workspace);
    return _bstr_t(_result, false);
}

inline HRESULT DIMLApp::PutCharArray ( _bstr_t Name, _bstr_t Workspace, _bstr_t charArray ) {
    return _com_dispatch_method(this, 0x60010007, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008", (BSTR)Name, (BSTR)Workspace, (BSTR)charArray);
}

inline long DIMLApp::GetVisible ( ) {
    long _result;
    _com_dispatch_method(this, 0x60010008, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

inline void DIMLApp::PutVisible ( long _arg1 ) {
    _com_dispatch_method(this, 0x60010008, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}
